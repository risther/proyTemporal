@model SistemaCitasRemotas.Models.Medico
@{ ViewBag.Title = "AgregarEditar";
    List<SistemaCitasRemotas.Models.TipoUsuario> TipoUsuario = ViewBag.TipoUsuario;
    List<SistemaCitasRemotas.Models.Especialidad> Especialidad = ViewBag.Especialidad;
}

<h2>Agregar / Editar</h2>   

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="~/Medico/Index">Medico</a></li>
        <li class="breadcrumb-item active">@Model.nombres</li>
    </ol>
</nav>

<br />
<br />

@using (Html.BeginForm("Guardar", "Medico", FormMethod.Post))
{
    @Html.HiddenFor(X => X.id)

    <div class="card">
        <div class="card-header">Informacion del semestre</div>
        <div class="card-body">

            <div class="form-group">
                @Html.LabelFor(x => x.id)
                @Html.TextBoxFor(x => x.id, new { @class = "form-control", disabled = true })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.idTipoUsuario)
                <select name="idTipoUsuario" class="form-control">
                    <option @(Model.idTipoUsuario.Equals("") ? "selected" : "") value="">Seleccione</option>

                    @foreach (var d in TipoUsuario)
                    {
                        <option @(Model.idTipoUsuario.Equals(d.id) ? "selected" : "") value="@d.id">@d.nombre </option>
                    }
                </select>
                @Html.ValidationMessageFor(x => x.idTipoUsuario, null, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.idEspecialidad)
                <select name="idEspecialidad" class="form-control">
                    <option @(Model.idEspecialidad.Equals("") ? "selected" : "") value="">Seleccione</option>

                    @foreach (var d in Especialidad)
                    {
                        <option @(Model.idEspecialidad.Equals(d.id) ? "selected" : "") value="@d.id">@d.nombre </option>
                    }
                </select>
                @Html.ValidationMessageFor(x => x.idEspecialidad, null, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.nombres)
                @Html.TextBoxFor(x => x.nombres, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.nombres, null, new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(x => x.apellidos)
                @Html.TextBoxFor(x => x.apellidos, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.apellidos, null, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.telefono)
                @Html.TextBoxFor(x => x.telefono, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.telefono, null, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.correo)
                @Html.TextBoxFor(x => x.correo, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.correo, null, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.clave)
                @Html.TextBoxFor(x => x.clave, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.clave, null, new { @class = "text-danger" })
            </div>




            <div class="form-group">
                @Html.LabelFor(x => x.estado)
                <select name="estado" class="form-control">
                    <option @(Model.estado == "" ? "selected" : "" ) value="">Seleccion</option>
                    <option @(Model.estado == "activo" ? "selected" : "" ) value="activo">Activo</option>
                    <option @(Model.estado == "inactivo" ? "selected" : "" ) value="inactivo">Inactivo</option>
                </select>
                @Html.ValidationMessageFor(x => x.estado, null, new { @class = "text-danger" })

            </div>


            <div class="text-right">
                <button type="submit" class="btn btn-primary">Guardar</button>
                <a href="~/Usuario" class="btn btn-danger">Cancelar</a>
            </div>

        </div>


    </div>}